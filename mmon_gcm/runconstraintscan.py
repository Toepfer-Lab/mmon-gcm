# AUTOGENERATED! DO NOT EDIT! File to edit: ../src/3.2_run_constraint_scan.ipynb.

# %% auto 0
__all__ = ['test', 'results_path', 'model_path', 'constraints_csv', 'light_colour', 'no_cores', 'constraints', 'model',
           'scan_solution', 'solution_df']

# %% ../src/3.2_run_constraint_scan.ipynb 4
import sys

import cobra
import mmon_gcm.constraintscan  # from x import y syntax doesn't work because of nbdev export format
import pandas as pd
from pandarallel import pandarallel

# %% ../src/3.2_run_constraint_scan.ipynb 5
test = False

# %% ../src/3.2_run_constraint_scan.ipynb 7
results_path = sys.argv[1]
model_path = sys.argv[2]
constraints_csv = sys.argv[3]
light_colour = sys.argv[4]
no_cores = int(sys.argv[5])

# %% ../src/3.2_run_constraint_scan.ipynb 8
constraints = pd.read_csv(constraints_csv, index_col=[0], header=[0])
model = cobra.io.load_json_model(model_path)

# %% ../src/3.2_run_constraint_scan.ipynb 12
pandarallel.initialize(nb_workers=no_cores, progress_bar=False)
scan_solution = constraints.parallel_apply(
    mmon_gcm.constraintscan.solve_model_for_constraint_scan,
    args=([model, light_colour]),
    axis=1,
)

# %% ../src/3.2_run_constraint_scan.ipynb 13
solution_df = pd.DataFrame()
for i, solution in scan_solution.items():
    # this is to catch infeasible solutions
    try:
        solution_df = solution_df.append(
            solution.to_frame().loc[:, "fluxes"], ignore_index=True
        )
    except:
        solution_df = solution_df.append(pd.Series(dtype=float), ignore_index=True)

solution_df.to_csv(results_path)
